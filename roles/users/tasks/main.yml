---
# tasks file for users
- name:  Create groups
  group: name={{item.name}} gid={{item.gid}} state=present
  with_items: server_groups

- name: Adding users
  user:
    name: "{{ item.username }}"
    uid: "{{ item.uid|default(omit) }}"
    home: "{{ item.home|default(users_home ~ '/' ~ item.username ) }}"
    comment: "{{ item.name|default(omit) }}"
    system: "{{ item.system|default(omit) }}"
    generate_ssh_key: "{{ item.ssh_key_generate|default(omit) }}"
    group: "{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else (users_group if users_group else omit)) }}"
    groups: "{{ item.groups|join(',') if item.groups is defined else users_groups|join(',')}}"
    ssh_key_file: ".ssh/id_{{ item.ssh_key_type|default('rsa') }}"
    ssh_key_passphrase: "{{ item.ssh_key_password|default('') }}"
    ssh_key_bits: "{{ item.ssh_key_bits|default(2048) }}"
    createhome: "{{ item.home_create|default(omit) }}"
    append: yes
    state: present
  with_items: users

- name: Setting user's home permission
  file:
    dest: "{{ item.home|default(users_home ~ '/' ~ item.username) }}"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else (users_group if users_group else item.username) }}"
    mode: "{{ item.home_mode if item.home_mode is defined else users_home_mode }}"
  when: item.home_create is not defined or item.home_create
  with_items: users

- name: Adding user's .ssh directory
  file:
    path: "{{ item.home|default(users_home ~ '/' ~ item.username) }}/.ssh"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else (users_group if users_group else item.username) }}"
    state: directory
    mode: 0700
  when: item.home_create is not defined or item.home_create
  with_items: users

- name: Adding user's private key
  template:
    src: home-user-ssh-private-key.j2
    dest: "{{ item.home|default(users_home ~ '/' ~ item.username) }}/.ssh/id_{{ item.ssh_key_type|default('rsa') }}"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else (users_group if users_group else item.username) }}"
    mode: 0600
  when: (item.home_create is not defined or item.home_create) and item.ssh_key is defined
  with_items: users

- name: Adding user's authorized keys
  authorized_key:
    key: "{{ item.1 }}"
    user: "{{ item.0.username }}"
  when: item.0.home_create is not defined or item.0.home_create
  with_subelements:
    - users
    - authorized_keys